CREATE TABLE `kait20`.`uch_plan_groups` (
  `id_up` INT NOT NULL AUTO_INCREMENT,
  `id_group` INT NULL,
  `id_predmet` INT NULL,
  `id_prepod` INT NULL,
  `Item1` INT NULL,
  `Item2` INT NULL,
  `Item3` INT NULL,
  `Item4` INT NULL,
  `Item5` INT NULL,
  `Item6` INT NULL,
  `Item7` INT NULL,
  `Item8` INT NULL,
  `Item9` INT NULL,
  `Item10` INT NOT NULL,
  `Item11` INT NULL,
  `Item12` INT NULL,
  `Item13` INT NULL,
  `Item14` INT NULL,
  `Item15` INT NULL,
  `Item16` INT NULL,
  `Item17` INT NULL,
  `Item18` INT NULL,
  PRIMARY KEY (`id_up`, `Item10`));

  -----------------------------------------------------------
  SELECT prepods.id_prepod ,prepods.fam,prepods.name,prepods.otch,uch_groups.name_group,
predmets.index_pr,predmets.name_pr,predmets.kurs,
uch_plan.*,prep_group_plan.id_group 
FROM prepods 
left join prep_group_plan on prep_group_plan.id_prepod = prepods.id_prepod
left join uch_plan on uch_plan.id_up = prep_group_plan.id_up
left join uch_groups on prep_group_plan.id_group = uch_groups.id_group
left join predmets on predmets.id_pr = uch_plan.id_pr
where prepods.id_prepod =13

  ---------------------------------------------------------------




  cmd = new MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn);

cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15);
cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15);

da.SelectCommand = cmd;

<DataGridComboBoxColumn x:Name="Whatever">
     <DataGridComboBoxColumn.EditingElementStyle>
          <Style TargetType="{x:Type ComboBox}">
               <EventSetter Event="SelectionChanged" Handler="SomeSelectionChanged" />
          </Style>
     </DataGridComboBoxColumn.EditingElementStyle>
</DataGridComboBoxColumn>


private void SomeSelectionChanged(object sender, SelectionChangedEventArgs e)
{
     var comboBox = sender as ComboBox;
     var selectedItem = this.GridName.CurrentItem;
}

-----------------------------------------------------------------
<Window.Resources>
        <model:Kurses x:Key="kurses" />
        <model:ListSpecialnost x:Key="listSpecialnost" />
        <CollectionViewSource x:Key="listSpecialnostWiew" Source="{Binding Source={StaticResource listSpecialnost}}" />
    </Window.Resources>



      <MenuItem Header="Список учебных планов" Name="ListUP_MenuItem">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/ImageLib;component/Resources/application-vnd.oasis.opendocument.spreadsheet.png" Height="36" />
                    </MenuItem.Icon>
                    <MenuItem.ItemsSource >
                        <CompositeCollection>
                            <CollectionContainer Collection="{Binding Source={StaticResource listSpecialnostWiew}}" />
                        </CompositeCollection>
                    </MenuItem.ItemsSource>
                    <MenuItem.ItemTemplate>
                        <DataTemplate>

                            <MenuItem Header="{Binding Path=FullName}" ItemsSource="{Binding Source={StaticResource kurses}}">
                                <MenuItem.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Name}"></TextBlock>
                                    </DataTemplate>
                                </MenuItem.ItemTemplate>
                                    
                            </MenuItem>
                           
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
            </MenuItem>



             <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <Border Margin="10" Padding="10" BorderBrush="SteelBlue"
                         BorderThickness="2" CornerRadius="5">
                                <TextBlock Text="{Binding Path=name_pr}" TextWrapping="Wrap" 
                         FontSize="10" MaxWidth="350"></TextBlock>
                            </Border>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
---------------------------------------------------------------------------------------
 try
            {
                using (MySqlConnection conn = new MySqlConnection(Program.ConnectionString))
                {
                    using (MySqlCommand cmd = new MySqlCommand())
                    {
                        cmd.Connection = conn;
                        conn.Open();

                        using (MySqlBackup mb = new MySqlBackup(cmd))
                        {
                            mb.ExportInfo.AddCreateDatabase = cbExAddCreateDatabase.Checked;
                            mb.ExportInfo.ExportTableStructure = cbExAddDropCreateTable.Checked;
                            mb.ExportInfo.ExportRows = cbExExportRows.Checked;
                            mb.ExportInfo.RecordDumpTime = cbExRecordDumpTime.Checked;
                            mb.ExportInfo.ResetAutoIncrement = cbExResetAutoIncrement.Checked;
                            mb.ExportInfo.EnableEncryption = cbExEnableEncryption.Checked;
                            mb.ExportInfo.EncryptionPassword = txtExPassword.Text;
                            mb.ExportInfo.MaxSqlLength = (int)nmExMaxSqlLength.Value;
                            mb.ExportInfo.ExportFunctions = cbExExportRoutines.Checked;
                            mb.ExportInfo.ExportProcedures = cbExExportRoutines.Checked;
                            mb.ExportInfo.ExportTriggers = cbExExportRoutines.Checked;
                            mb.ExportInfo.ExportEvents = cbExExportRoutines.Checked;
                            mb.ExportInfo.ExportViews = cbExExportRoutines.Checked;
                            mb.ExportInfo.ExportRoutinesWithoutDefiner = cbExExportRoutinesWithoutDefiner.Checked;
                            mb.ExportInfo.RowsExportMode = (RowsDataExportMode)comboBox_RowsExportMode.SelectedValue;
                            mb.ExportInfo.WrapWithinTransaction = checkBox_WrapInTransaction.Checked;

                            mb.ExportToFile(Program.TargetFile);
                        }
                        conn.Close();
                    }
                }

                MessageBox.Show("Finished. Dump saved at:" + Environment.NewLine + Environment.NewLine + Program.TargetFile);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }